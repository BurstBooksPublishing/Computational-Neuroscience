def bcm_update(weights, presynaptic_activity, postsynaptic_activity, theta, learning_rate):
    """
    Update synaptic weights using the BCM rule.
    
    Parameters:
    weights (numpy.ndarray): Current synaptic weights.
    presynaptic_activity (numpy.ndarray): Presynaptic activity.
    postsynaptic_activity (float): Postsynaptic activity.
    theta (float): Threshold for synaptic modification.
    learning_rate (float): Learning rate.
    
    Returns:
    numpy.ndarray: Updated synaptic weights.
    """
    phi = postsynaptic_activity * (postsynaptic_activity - theta)
    delta_w = learning_rate * phi * presynaptic_activity
    weights += delta_w
    return weights

# Example usage
weights = np.array([0.5, 0.6, 0.7])
presynaptic_activity = np.array([0.1, 0.2, 0.3])
postsynaptic_activity = 0.4
theta = 0.2
learning_rate = 0.01

updated_weights = bcm_update(weights, presynaptic_activity, postsynaptic_activity, theta, learning_rate)
print("Updated weights:", updated_weights)