import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp

def hopf_bifurcation(t, z, mu, omega):
    x, y = z
    dxdt = mu * x - omega * y - x * (x**2 + y**2)
    dydt = omega * x + mu * y - y * (x**2 + y**2)
    return [dxdt, dydt]

mu = 1.0  # Bifurcation parameter
omega = 1.0  # Natural frequency
z0 = [0.1, 0.1]  # Initial conditions
t_span = (0, 50)  # Time span
sol = solve_ivp(hopf_bifurcation, t_span, z0, args=(mu, omega), method='RK45')

plt.plot(sol.y[0], sol.y[1])
plt.xlabel('x')
plt.ylabel('y')
plt.title('Hopf Bifurcation')
plt.show()