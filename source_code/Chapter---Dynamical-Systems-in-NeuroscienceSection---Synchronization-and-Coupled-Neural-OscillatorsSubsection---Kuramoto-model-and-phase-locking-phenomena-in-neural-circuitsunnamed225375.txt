import numpy as np
import matplotlib.pyplot as plt

# Parameters
N = 100  # Number of oscillators
K = 1.0  # Coupling strength
T = 100  # Total time
dt = 0.01  # Time step
omega = np.random.normal(1, 0.1, N)  # Natural frequencies
theta = np.random.uniform(0, 2*np.pi, N)  # Initial phases

# Simulation
for t in np.arange(0, T, dt):
    for i in range(N):
        dtheta = omega[i] + (K/N) * np.sum(np.sin(theta - theta[i]))
        theta[i] += dtheta * dt

# Plot results
plt.plot(np.sin(theta))
plt.xlabel('Oscillator Index')
plt.ylabel('Phase')
plt.title('Kuramoto Model Simulation')
plt.show()