import numpy as np
import matplotlib.pyplot as plt

# Parameters
N = 100  # Number of oscillators
K = 1.0  # Coupling strength
omega = np.random.normal(1.0, 0.1, N)  # Natural frequencies
phi = np.random.uniform(0, 2*np.pi, N)  # Initial phases
dt = 0.01  # Time step
T = 100  # Total time
steps = int(T / dt)

# Simulation
for t in range(steps):
    dphi = omega + (K / N) * np.sum(np.sin(phi[:, np.newaxis] - phi), axis=1)
    phi += dphi * dt
    phi = np.mod(phi, 2*np.pi)

# Plot results
plt.plot(phi, 'o')
plt.xlabel('Oscillator Index')
plt.ylabel('Phase')
plt.title('Phase Distribution')
plt.show()